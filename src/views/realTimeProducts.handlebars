<!DOCTYPE html>
<html>
<head>
  <title>Real Time Products</title>
</head>
<body>
  <h1>Lista de Productos en Tiempo Real</h1>
  <ul>
    {{#each products}}
      <li>{{this.name}} - {{this.price}}</li>
    {{/each}}
  </ul>

  <h2>Agregar Producto</h2>
  <form id="addProductForm">
    <label for="name">Nombre:</label>
    <input type="text" id="name" name="name" required>
    <label for="price">Precio:</label>
    <input type="number" id="price" name="price" required>
    <button type="submit">Agregar</button>
  </form>

  <h2>Eliminar Producto</h2>
  <form id="deleteProductForm">
    <label for="productId">ID del Producto:</label>
    <input type="text" id="productId" name="productId" required>
    <button type="submit">Eliminar</button>
  </form>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();


  app.get('/realtimeproducts', async (req, res) => {
    try {
      const products = await productManager.getProducts(); 
      res.render('realTimeProducts', {
        pageTitle: 'Real Time Products',
        products: products
      });
    } catch (error) {
      res.status(500).json({ error: 'Error al obtener los productos' });
    }
  });


    /* EVENTO AGREGAR PRODUCTO */
    document.getElementById('addProductForm').addEventListener('submit', (event) => {
      event.preventDefault();
      const formData = new FormData(event.target);
      const productData = {
        name: formData.get('name'),
        price: formData.get('price')
      };
      socket.emit('addProduct', productData);
    });


    /* EVENTO ELIMINAR PRODUCTO */
    document.getElementById('deleteProductForm').addEventListener('submit', (event) => {
      event.preventDefault();
      const productId = event.target.productId.value;
      socket.emit('deleteProduct', productId);
    });


    /* AVISA EVENTO D PRODUCTOS AGREGADOS Y ELIMINADOS */
    socket.on('productAdded', (data) => {
      const newProduct = `<li>${data.name} - ${data.price}</li>`;
      document.querySelector('ul').insertAdjacentHTML('beforeend', newProduct);
    });

    socket.on('productDeleted', (productId) => {
      const productElement = document.querySelector(`li[data-id="${productId}"]`);
      if (productElement) {
        productElement.remove();
      }
    });
  </script>
</body>
</html>
